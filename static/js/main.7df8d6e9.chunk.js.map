{"version":3,"sources":["component/Navbar.js","component/Panel.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","Component","Panel","props","stompClient","undefined","state","wsEndpointChange","bind","sendToChange","fetchFromChange","onConnect","messageChange","onSyntaxDetails","onSend","onMessageReceived","errorCallBack","onDisonnect","event","this","setState","target","value","ws","SockJS","ws_endpoint_url","Stomp","_this","connect","frame","subscribe","fetch_from","sdkEvent","connected","disconnect","message","newList","message_list","push","JSON","stringify","console","log","messy","document","getElementById","obj","parse","pretty","error","alert","error_msg","send","send_to","className","connection_errors","placeholder","onChange","onClick","disabled","id","syntax_ok","map","d","headers","body","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.7df8d6e9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./navbar_styles.css\"\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav>\r\n                <p>WebSocket testing</p>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import { Component } from \"react\";\r\nimport * as Stomp from 'stompjs';\r\nimport * as SockJS from 'sockjs-client';\r\nimport \"./panel_styles.css\";\r\n\r\nclass Panel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.stompClient = undefined;\r\n\r\n        this.state = {\r\n            \"ws_endpoint_url\":\"\",\r\n            \"send_to\":\"\",\r\n            \"fetch_from\":\"\",\r\n            \"message\":\"\",\r\n            \"syntax_ok\":true,\r\n            \"error_msg\":\"\",\r\n            \"message_list\":[],\r\n            \"connection_errors\":false,\r\n            \"connected\":false\r\n        };\r\n\r\n        this.wsEndpointChange = this.wsEndpointChange.bind(this);\r\n        this.sendToChange = this.sendToChange.bind(this);\r\n        this.fetchFromChange = this.fetchFromChange.bind(this);\r\n        this.onConnect = this.onConnect.bind(this);\r\n        this.messageChange = this.messageChange.bind(this);\r\n        this.onSyntaxDetails = this.onSyntaxDetails.bind(this);\r\n        this.onSend = this.onSend.bind(this);\r\n        this.onMessageReceived = this.onMessageReceived.bind(this);\r\n        this.errorCallBack = this.errorCallBack.bind(this);\r\n        this.onDisonnect = this.onDisonnect.bind(this);\r\n    }\r\n\r\n    wsEndpointChange(event){\r\n        this.setState({\r\n            \"ws_endpoint_url\":event.target.value\r\n        });\r\n    }\r\n\r\n    sendToChange(event){\r\n        this.setState(\r\n            {\r\n                \"send_to\":event.target.value\r\n            }\r\n        );\r\n    }\r\n\r\n    fetchFromChange(event){\r\n        this.setState(\r\n            {\r\n                \"fetch_from\":event.target.value,\r\n            }\r\n        );\r\n    }\r\n\r\n    onConnect(event){\r\n        let ws = new SockJS(this.state.ws_endpoint_url);\r\n        this.stompClient = Stomp.over(ws);\r\n        const _this = this;\r\n        _this.stompClient.connect({}, function (frame) {\r\n            _this.stompClient.subscribe(_this.state.fetch_from, function (sdkEvent) {\r\n                _this.onMessageReceived(sdkEvent);\r\n            });\r\n        }, this.errorCallBack);\r\n\r\n        this.setState({\r\n            \"connection_errors\":false,\r\n            \"connected\":true\r\n        });\r\n    }\r\n\r\n    onDisonnect(event){\r\n        if(this.stompClient.connected){\r\n            this.stompClient.disconnect();\r\n            this.setState({\r\n              \"connected\":false\r\n            });\r\n        }\r\n    }\r\n\r\n    onMessageReceived(message){\r\n        var newList = this.state.message_list;\r\n        newList.push(JSON.stringify(message));\r\n        this.setState(\r\n            {\r\n                \"message_list\":newList\r\n            }\r\n        );\r\n        console.log(this.state.message_list);\r\n    }\r\n\r\n    errorCallBack() {\r\n        this.setState({\r\n            \"connection_errors\":true,\r\n            \"connected\":false\r\n        });\r\n    }\r\n\r\n    messageChange(event){\r\n        try{\r\n            var messy = document.getElementById(\"message-box\").value;\r\n            var obj = JSON.parse(messy);\r\n            var pretty = JSON.stringify(obj, undefined, 4);\r\n            document.getElementById(\"message-box\").value = pretty;\r\n            this.setState({\r\n                \"syntax_ok\":true\r\n            });\r\n        }\r\n        catch (error) {\r\n            this.setState({\r\n                \"syntax_ok\":false,\r\n                \"error_msg\":error\r\n            });\r\n        }\r\n\r\n        this.setState(\r\n            {\r\n                \"message\":event.target.value,\r\n            }\r\n        );\r\n    }\r\n\r\n    onSyntaxDetails(event){\r\n        alert(`Following error message was thrown: \"${ this.state.error_msg}\"`);\r\n    }\r\n\r\n    onSend(event){\r\n        this.stompClient.send(this.state.send_to, {}, this.state.message)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"panel\">\r\n                <div className=\"app-status\">\r\n                    {this.state.connected?<p className=\"connected-status\">CONNECTED</p>:<p className=\"not-connected-status\">NOT CONNECTED</p>}\r\n                    {this.state.connection_errors?<p className=\"error-status\">ERROR</p>:<p className=\"no-errors-status\">NO ERRORS</p>}\r\n                </div>\r\n                <div className=\"connect-form\">\r\n                    <input placeholder=\"WS endpoint URL\" onChange={this.wsEndpointChange}></input>\r\n                    <input placeholder=\"Send to\" onChange={this.sendToChange}></input>\r\n                    <input placeholder=\"Fetch from\" onChange={this.fetchFromChange}></input>\r\n                    <button onClick={this.onConnect} disabled={this.state.connected}>Connect</button>\r\n                    <button onClick={this.onDisonnect} disabled={!this.state.connected}>Disconnect</button>\r\n                </div>\r\n                <div className=\"send-form\">\r\n                    <textarea id=\"message-box\" placeholder=\"Message\" onChange={this.messageChange}></textarea>\r\n                    <button id=\"check-syntax-btn\" onClick={this.onSyntaxDetails} disabled={this.state.syntax_ok}>{this.state.syntax_ok ? \"Syntax OK\" : \"Syntax Error (details)\"}</button>\r\n                    <button onClick={this.onSend} disabled={!this.state.syntax_ok}>Send</button>\r\n                </div>\r\n                <div className=\"messages\">\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>Headers:</th>\r\n                                <th>Body:</th>\r\n                            </tr>\r\n                        </tbody>\r\n                        {this.state.message_list.map((d) => \r\n                        <tbody>\r\n                            <tr>\r\n                                <td>{JSON.stringify(JSON.parse(d).headers)}</td>\r\n                                <td>{JSON.parse(d).body}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                        )}\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Panel;","import './App.css';\nimport { Component } from 'react';\nimport Navbar from './component/Navbar';\nimport Panel from './component/Panel';\n\nclass App extends Component {\n  render() {\n    return(\n      <div>\n        <Navbar/>\n        <Panel/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}